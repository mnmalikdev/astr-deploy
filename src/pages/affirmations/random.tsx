import React from "react";
import Head from "next/head";
import data from "@/data/home.json";
import ClientLayout from "@/layouts/clientLayout";
import Card from "@/components/card";
import { ICardProps } from "@/types/card";


const SelectedCard: React.FC<ICardProps> = ({ source, message, isLiked, type }) => {

    const [random, setRandom] = React.useState(data[0]);

    React.useEffect(() => {
        setRandom(data[Math.floor(Math.random() * data.length)]);
      }, []);

  return (
    <>
      {source.length == 0 || message.length == 0 ? (
        <Card source={random.source} message={random.message} isLiked={random.liked} type={type} />
      ) : (
        <Card source={source} message={message} isLiked={isLiked} type={type} />
      )}
    </>
  );
};

const Random = () => {
  const [source, setSource] = React.useState<string>("");
  const [message, setMessage] = React.useState<string>("");
  const [isLiked, setIsLiked] = React.useState<boolean>(false);

  return (
    <>
      <Head>
        <title>Random</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ClientLayout space={space.space} spaceDetail={space.spaceDetail}>
        <div className="text-2xl ml-auto">
          By the way, <span className="text-gray-600">John</span>
        </div>
        <div className="flex justify-center">
          <SelectedCard source={source} message={message} isLiked={isLiked} type='large' />
        </div>
        <div>
          <div className="text-base font-semibold mt-20">More affirmation</div>
          <div className="flex justify-center flex-wrap">
            {data.map((value, key) => (
              <div
                className="m-2 mt-12"
                key={key}
                onClick={() => {
                  setSource(value.source);
                  setMessage(value.message);
                  setIsLiked(value.liked);
                }}
              >
                <Card
                  source={value.source}
                  message={value.message}
                  isLiked={value.liked}
                  type='small'
                />
              </div>
            ))}
          </div>
        </div>
      </ClientLayout>
    </> 
  );
};
 

const space = {
    space: "Random Space",
    spaceDetail:
      "Like trajectories, inspiration isn't linear.Use this space to discover your affirmation in an alternative way.",
  };

export default Random;

